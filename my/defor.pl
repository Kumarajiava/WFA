#!/usr/bin/perl -w 

use strict;
use Tk;
use Cwd;
use File::Spec;
use File::Basename;
use Digest::MD5;
use IO::File;
use Win32::Clipboard;

my $mlgm = 5;
my @ph;
my $cwd0;
my $FFILE;
my $myself ="Md5PlG\.exe";
my $ext = "MD5.txt";
my $main = MainWindow->new;
my $filedir = $main->Entry(-width => 100)->pack;





$main->Button(-text => 'HASHCALC5',
	-command => sub{do_fax(0, $filedir)},
)->pack;
my $button_frame = 0;
MainLoop;

sub do_fax {
	my ($file, $filedir) = @_;
	my $filedir_val = $filedir->get;
	if ($button_frame) {
		$button_frame->packForget;
	}	
	$button_frame = $main->Frame()->pack(-side => "bottom");
	
	if (-d $filedir_val){
		do_check($filedir_val,$mlgm--);
		&md5pl;
		do_pri(@ph);
		undef @ph;
	}else{
		my $FH=IO::File->new($filedir_val) or die "Couldn't open '$filedir_val': $!";
        binmode($FH);
        my $hash=Digest::MD5->new->addfile(*$FH)->hexdigest;        
        $FH->close;
		$button_frame->Label(-text => $hash)->pack;
		my $CLIP = Win32::Clipboard();
		$CLIP->Set($hash);
	}
}

sub do_pri{
	my @items = @_;
	my $box = $button_frame->Listbox(
         -relief => 'sunken',
         -height  => 5,
         -setgrid => 1,
    );
    foreach (@items) {
       $box->insert('end', $_);
    }
    my $scroll = $button_frame->Scrollbar(-command => ['yview', $box]);
    $box->configure(-width => 100,-height => 30,-yscrollcommand => ['set', $scroll]);
    $box->pack(-side => 'left', -fill => 'both', -expand => 1);
    $scroll->pack(-side => 'right', -fill => 'y');
}

sub do_check{
	($cwd0,$mlgm)=@_;
	if ($mlgm != -1) {	
		if ($cwd0=~m/\\\\|\/\/|\#|\!|\=|\,|\@|\$|\%|\&|\*|\¡£|\`/g){
			$button_frame->Label(-text => "err path\n")->pack;
			if ($mlgm == 0){
				$button_frame->Label(-text => "ß÷ÁË¸ößä£¡\n")->pack;
			}
			next;
		}
		$cwd0=~s#\/#\\#g;
		chomp ($cwd0);
		if (chdir ($cwd0)){
			$mlgm = -1;
		}
		else{
			if ($mlgm == 0){
				$main->Label(-text => "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx!\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx!\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx!\n")->pack;
			}
			$button_frame->Label(-text => "MU path\n")->pack;
		} 
	}
}
sub md5pl{	
	my @files = glob q{*};
	my $md5=$cwd0."\\".$ext;
	$FFILE = IO::File->new($ext,q{>} ) or die "Couldn't open $ext:$!";
	select( $FFILE ); 
	$| = 1;
	my $gctime = localtime;
	my $timm = "# MD5 checksums generated by Md5Pl \n# Generated $gctime\n\n";
	print $FFILE $timm;
	$button_frame->Label(-text => $timm)->pack;
	foreach my $file(@files)
	{
		my $path = File::Spec->catfile( $cwd0, $file );
		&filelist($path);
	}
	$FFILE->close;
	my $cpfile;
	if (-e $md5) {
		my $FHH=IO::File->new($md5) or die "Couldn't open '$md5': $!";
		binmode($FHH);
		$cpfile = Digest::MD5->new->addfile(*$FHH)->hexdigest;        
		$FHH->close;	
	}
	$button_frame->Label(-text => "MD5.txt\'s MD5:\n$cpfile\n it's Clipboard now\n")->pack;
	my $CLIP = Win32::Clipboard();
	$CLIP->Set($cpfile);
	$button_frame->Label(-text => "end!\n")->pack;
}

sub filelist{
	my $path = shift @_;
	my $file_name = basename $path;
	if(-d $file_name)
	{		
		chdir $path or die "can't chdir $path:$!";
		my $cwd = getcwd;
		my @files = glob q{*};
		my $count = 0;
		foreach my $file(@files)
		{
			$count++;
			my $path = File::Spec->catfile( $cwd, $file );
			&filelist($path);
		}
		if ($count eq @files)
		{
			my $dir_name = dirname $path; 
			chdir "$dir_name\.." or die "can't chdir $dir_name\..:$!";
		}
	}
	else
	{
		my $FH=IO::File->new($path) or die "Couldn't open '$path': $!";
        binmode($FH);
        my $hash=Digest::MD5->new->addfile(*$FH)->hexdigest;        
        $FH->close;
        my $cwd1=$cwd0;
        $cwd1=~s/\/|\\/\#/g;
        $path=~s/\\|\//\#/g;
        $path=~s#$cwd1#\.#gi;
        $path=~s/\#/\\/g;        
        next if $path eq "\.\\$myself";
		print $FFILE "<======$hash======> $path\n";
		push @ph,"<======$hash======> $path\n";
        #print STDOUT "<======$hash======> $path\n";
	}
}